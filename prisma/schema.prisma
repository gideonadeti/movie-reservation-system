generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(NADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshToken RefreshToken?
  movies       Movie[]
  showtimes    Showtime[]
}

enum Role {
  ADMIN
  NADMIN
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Movie {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  imageUrl    String
  genre       String
  adminId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  admin     User       @relation(fields: [adminId], references: [id], onDelete: Cascade)
  showtimes Showtime[]
}

model Showtime {
  id           String   @id @default(uuid())
  startTime    DateTime
  endTime      DateTime
  price        Float
  adminId      String
  movieId      String
  auditoriumId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  admin      User       @relation(fields: [adminId], references: [id], onDelete: Cascade)
  movie      Movie      @relation(fields: [movieId], references: [id], onDelete: Cascade)
  auditorium Auditorium @relation(fields: [auditoriumId], references: [id], onDelete: Cascade)
}

model Auditorium {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  seats     Seat[]
  showtimes Showtime[]
}

model Seat {
  id           String   @id @default(uuid())
  label        String
  auditoriumId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  auditorium Auditorium @relation(fields: [auditoriumId], references: [id], onDelete: Cascade)
}
